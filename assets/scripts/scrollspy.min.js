/**
 * Extend jquery with a scrollspy plugin.
 * This watches the window scroll and fires events when elements are scrolled into viewport.
 *
 * @author Copyright 2013 John Smart
 * @license https://raw.github.com/thesmart/jquery-scrollspy/master/LICENSE
 * @see https://github.com/thesmart
 * @version 0.0.8
 */
!function(t){function r(r,n,o,e){var l=t();return t.each(c,function(t,c){var i=c.offset().top,s=c.offset().left,a=s+c.width(),u=i+c.height(),f=!(s>n||e>a||i>o||r>u);f&&l.push(c)}),l}function n(){++i;var n=o.scrollTop(),c=o.scrollLeft(),l=c+o.width(),s=n+o.height(),a=r(n,l,.9*s,c);t.each(a,function(t,r){var n=r.data("scrollSpy:ticks");"number"!=typeof n&&r.triggerHandler("scrollSpy:enter"),r.data("scrollSpy:ticks",i)}),t.each(e,function(t,r){var n=r.data("scrollSpy:ticks");"number"==typeof n&&n!==i&&(r.triggerHandler("scrollSpy:exit"),r.data("scrollSpy:ticks",null))}),e=a}var o=t(window),c=[],e=[],l=!1,i=0;t.scrollSpy=function(r){return r=t(r),r.each(function(r,n){c.push(t(n))}),l||(o.on("scroll",n),l=!0,setTimeout(function(){t(document).ready(n)},0)),r},t.fn.scrollSpy=function(){return t.scrollSpy(t(this))}}(jQuery);